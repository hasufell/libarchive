-- GENERATED by C->Haskell Compiler, version 0.28.6 Switcheroo, 25 November 2017 (Haskell)
-- Edit the ORIGNAL .chs file instead!


{-# LINE 1 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}
module Codec.Archive.Foreign.ArchiveEntry where 
import qualified Foreign.C.Types as C2HSImp
import qualified Foreign.Marshal.Utils as C2HSImp
import qualified Foreign.Ptr as C2HSImp



import qualified Codec.Archive.Foreign.Archive
{-# LINE 3 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}


import Codec.Archive.Foreign.ArchiveEntry.Macros
import Codec.Archive.Foreign.Archive
import Codec.Archive.Types
import Data.Coerce (coerce)
import Foreign.C.String
import Foreign.C.Types
import Foreign.Ptr (Ptr, castPtr)
import System.PosixCompat.Types (CMode (..), CDev (..))



type LinkResolverPtr = C2HSImp.Ptr (LinkResolver)
{-# LINE 16 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}



{-# LINE 18 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}


{-# LINE 19 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}


{-# LINE 20 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}


{-# LINE 21 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}


{-# LINE 22 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}


{-# LINE 23 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}


{-# LINE 24 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}


{-# LINE 25 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}


ft :: CMode -> FileType
ft 0 = error "hier"
ft i = toEnum (fromIntegral i)

ft' :: CMode -> FileType
ft' i = toEnum (fromIntegral i)

archiveEntryNew :: IO ((ArchiveEntryPtr))
archiveEntryNew =
  archiveEntryNew'_ >>= \res ->
  let {res' = id res} in
  return (res')

{-# LINE 34 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryFree :: (ArchiveEntryPtr) -> IO ()
archiveEntryFree a1 =
  let {a1' = id a1} in 
  archiveEntryFree'_ a1' >>
  return ()

{-# LINE 35 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryAtime :: (ArchiveEntryPtr) -> IO ((CTime))
archiveEntryAtime a1 =
  let {a1' = id a1} in 
  archiveEntryAtime'_ a1' >>= \res ->
  let {res' = id res} in
  return (res')

{-# LINE 36 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryAtimeNsec :: (ArchiveEntryPtr) -> IO ((CLong))
archiveEntryAtimeNsec a1 =
  let {a1' = id a1} in 
  archiveEntryAtimeNsec'_ a1' >>= \res ->
  let {res' = fromIntegral res} in
  return (res')

{-# LINE 37 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryFiletype :: (ArchiveEntryPtr) -> IO ((FileType))
archiveEntryFiletype a1 =
  let {a1' = id a1} in 
  archiveEntryFiletype'_ a1' >>= \res ->
  let {res' = ft res} in
  return (res')

{-# LINE 38 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryGid :: (ArchiveEntryPtr) -> IO ((LaInt64))
archiveEntryGid a1 =
  let {a1' = id a1} in 
  archiveEntryGid'_ a1' >>= \res ->
  let {res' = id res} in
  return (res')

{-# LINE 39 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryGname :: (ArchiveEntryPtr) -> IO ((CString))
archiveEntryGname a1 =
  let {a1' = id a1} in 
  archiveEntryGname'_ a1' >>= \res ->
  return res >>= \res' ->
  return (res')

{-# LINE 40 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryGnameUtf8 :: (ArchiveEntryPtr) -> IO ((CString))
archiveEntryGnameUtf8 a1 =
  let {a1' = id a1} in 
  archiveEntryGnameUtf8'_ a1' >>= \res ->
  return res >>= \res' ->
  return (res')

{-# LINE 41 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryGnameW :: (ArchiveEntryPtr) -> IO ((CWString))
archiveEntryGnameW a1 =
  let {a1' = id a1} in 
  archiveEntryGnameW'_ a1' >>= \res ->
  let {res' = castPtr res} in
  return (res')

{-# LINE 42 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryMode :: (ArchiveEntryPtr) -> IO ((CMode))
archiveEntryMode a1 =
  let {a1' = id a1} in 
  archiveEntryMode'_ a1' >>= \res ->
  let {res' = id res} in
  return (res')

{-# LINE 43 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryMtime :: (ArchiveEntryPtr) -> IO ((CTime))
archiveEntryMtime a1 =
  let {a1' = id a1} in 
  archiveEntryMtime'_ a1' >>= \res ->
  let {res' = id res} in
  return (res')

{-# LINE 44 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryMtimeNsec :: (ArchiveEntryPtr) -> IO ((CLong))
archiveEntryMtimeNsec a1 =
  let {a1' = id a1} in 
  archiveEntryMtimeNsec'_ a1' >>= \res ->
  let {res' = fromIntegral res} in
  return (res')

{-# LINE 45 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryNlink :: (ArchiveEntryPtr) -> IO ((CUInt))
archiveEntryNlink a1 =
  let {a1' = id a1} in 
  archiveEntryNlink'_ a1' >>= \res ->
  let {res' = fromIntegral res} in
  return (res')

{-# LINE 46 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryPathname :: (ArchiveEntryPtr) -> IO ((CString))
archiveEntryPathname a1 =
  let {a1' = id a1} in 
  archiveEntryPathname'_ a1' >>= \res ->
  return res >>= \res' ->
  return (res')

{-# LINE 47 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryPerm :: (ArchiveEntryPtr) -> IO ((CMode))
archiveEntryPerm a1 =
  let {a1' = id a1} in 
  archiveEntryPerm'_ a1' >>= \res ->
  let {res' = id res} in
  return (res')

{-# LINE 48 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySourcepath :: (ArchiveEntryPtr) -> IO ((CString))
archiveEntrySourcepath a1 =
  let {a1' = id a1} in 
  archiveEntrySourcepath'_ a1' >>= \res ->
  return res >>= \res' ->
  return (res')

{-# LINE 49 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySourcepathW :: (ArchiveEntryPtr) -> IO ((CWString))
archiveEntrySourcepathW a1 =
  let {a1' = id a1} in 
  archiveEntrySourcepathW'_ a1' >>= \res ->
  let {res' = castPtr res} in
  return (res')

{-# LINE 50 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySize :: (ArchiveEntryPtr) -> IO ((LaInt64))
archiveEntrySize a1 =
  let {a1' = id a1} in 
  archiveEntrySize'_ a1' >>= \res ->
  let {res' = id res} in
  return (res')

{-# LINE 51 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryStrmode :: (ArchiveEntryPtr) -> IO ((CString))
archiveEntryStrmode a1 =
  let {a1' = id a1} in 
  archiveEntryStrmode'_ a1' >>= \res ->
  return res >>= \res' ->
  return (res')

{-# LINE 52 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySymlink :: (ArchiveEntryPtr) -> IO ((CString))
archiveEntrySymlink a1 =
  let {a1' = id a1} in 
  archiveEntrySymlink'_ a1' >>= \res ->
  return res >>= \res' ->
  return (res')

{-# LINE 53 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySymlinkW :: (ArchiveEntryPtr) -> IO ((CWString))
archiveEntrySymlinkW a1 =
  let {a1' = id a1} in 
  archiveEntrySymlinkW'_ a1' >>= \res ->
  let {res' = castPtr res} in
  return (res')

{-# LINE 54 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySymlinkUtf8 :: (ArchiveEntryPtr) -> IO ((CString))
archiveEntrySymlinkUtf8 a1 =
  let {a1' = id a1} in 
  archiveEntrySymlinkUtf8'_ a1' >>= \res ->
  return res >>= \res' ->
  return (res')

{-# LINE 55 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryUid :: (ArchiveEntryPtr) -> IO ((LaInt64))
archiveEntryUid a1 =
  let {a1' = id a1} in 
  archiveEntryUid'_ a1' >>= \res ->
  let {res' = id res} in
  return (res')

{-# LINE 56 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryUname :: (ArchiveEntryPtr) -> IO ((CString))
archiveEntryUname a1 =
  let {a1' = id a1} in 
  archiveEntryUname'_ a1' >>= \res ->
  return res >>= \res' ->
  return (res')

{-# LINE 57 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryUnameUtf8 :: (ArchiveEntryPtr) -> IO ((CString))
archiveEntryUnameUtf8 a1 =
  let {a1' = id a1} in 
  archiveEntryUnameUtf8'_ a1' >>= \res ->
  return res >>= \res' ->
  return (res')

{-# LINE 58 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryUnameW :: (ArchiveEntryPtr) -> IO ((CWString))
archiveEntryUnameW a1 =
  let {a1' = id a1} in 
  archiveEntryUnameW'_ a1' >>= \res ->
  let {res' = castPtr res} in
  return (res')

{-# LINE 59 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetAtime :: (ArchiveEntryPtr) -> (CTime) -> (CLong) -> IO ()
archiveEntrySetAtime a1 a2 a3 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  let {a3' = fromIntegral a3} in 
  archiveEntrySetAtime'_ a1' a2' a3' >>
  return ()

{-# LINE 60 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryUnsetAtime :: (ArchiveEntryPtr) -> IO ()
archiveEntryUnsetAtime a1 =
  let {a1' = id a1} in 
  archiveEntryUnsetAtime'_ a1' >>
  return ()

{-# LINE 61 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetBirthtime :: (ArchiveEntryPtr) -> (CTime) -> (CLong) -> IO ()
archiveEntrySetBirthtime a1 a2 a3 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  let {a3' = fromIntegral a3} in 
  archiveEntrySetBirthtime'_ a1' a2' a3' >>
  return ()

{-# LINE 62 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryUnsetBirthtime :: (ArchiveEntryPtr) -> IO ()
archiveEntryUnsetBirthtime a1 =
  let {a1' = id a1} in 
  archiveEntryUnsetBirthtime'_ a1' >>
  return ()

{-# LINE 63 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetCtime :: (ArchiveEntryPtr) -> (CTime) -> (CLong) -> IO ()
archiveEntrySetCtime a1 a2 a3 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  let {a3' = fromIntegral a3} in 
  archiveEntrySetCtime'_ a1' a2' a3' >>
  return ()

{-# LINE 64 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryUnsetCtime :: (ArchiveEntryPtr) -> IO ()
archiveEntryUnsetCtime a1 =
  let {a1' = id a1} in 
  archiveEntryUnsetCtime'_ a1' >>
  return ()

{-# LINE 65 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetDev :: (ArchiveEntryPtr) -> (CDev) -> IO ()
archiveEntrySetDev a1 a2 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  archiveEntrySetDev'_ a1' a2' >>
  return ()

{-# LINE 66 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetDevmajor :: (ArchiveEntryPtr) -> (CDev) -> IO ()
archiveEntrySetDevmajor a1 a2 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  archiveEntrySetDevmajor'_ a1' a2' >>
  return ()

{-# LINE 67 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetDevminor :: (ArchiveEntryPtr) -> (CDev) -> IO ()
archiveEntrySetDevminor a1 a2 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  archiveEntrySetDevminor'_ a1' a2' >>
  return ()

{-# LINE 68 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetFflags :: (ArchiveEntryPtr) -> (CULong) -> (CULong) -> IO ()
archiveEntrySetFflags a1 a2 a3 =
  let {a1' = id a1} in 
  let {a2' = fromIntegral a2} in 
  let {a3' = fromIntegral a3} in 
  archiveEntrySetFflags'_ a1' a2' a3' >>
  return ()

{-# LINE 69 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryCopyFflagsText :: (ArchiveEntryPtr) -> (CString) -> IO ((CString))
archiveEntryCopyFflagsText a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntryCopyFflagsText'_ a1' a2' >>= \res ->
  return res >>= \res' ->
  return (res')

{-# LINE 70 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryCopyFflagsTextW :: (ArchiveEntryPtr) -> (CWString) -> IO ((CWString))
archiveEntryCopyFflagsTextW a1 a2 =
  let {a1' = id a1} in 
  let {a2' = castPtr a2} in 
  archiveEntryCopyFflagsTextW'_ a1' a2' >>= \res ->
  let {res' = castPtr res} in
  return (res')

{-# LINE 71 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetFiletype :: (ArchiveEntryPtr) -> (FileType) -> IO ()
archiveEntrySetFiletype a1 a2 =
  let {a1' = id a1} in 
  let {a2' = (fromIntegral . fromEnum) a2} in 
  archiveEntrySetFiletype'_ a1' a2' >>
  return ()

{-# LINE 72 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetGid :: (ArchiveEntryPtr) -> (LaInt64) -> IO ()
archiveEntrySetGid a1 a2 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  archiveEntrySetGid'_ a1' a2' >>
  return ()

{-# LINE 73 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetGname :: (ArchiveEntryPtr) -> (CString) -> IO ()
archiveEntrySetGname a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntrySetGname'_ a1' a2' >>
  return ()

{-# LINE 74 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetGnameUtf8 :: (ArchiveEntryPtr) -> (CString) -> IO ()
archiveEntrySetGnameUtf8 a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntrySetGnameUtf8'_ a1' a2' >>
  return ()

{-# LINE 75 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryCopyGname :: (ArchiveEntryPtr) -> (CString) -> IO ()
archiveEntryCopyGname a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntryCopyGname'_ a1' a2' >>
  return ()

{-# LINE 76 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryCopyGnameW :: (ArchiveEntryPtr) -> (CWString) -> IO ()
archiveEntryCopyGnameW a1 a2 =
  let {a1' = id a1} in 
  let {a2' = castPtr a2} in 
  archiveEntryCopyGnameW'_ a1' a2' >>
  return ()

{-# LINE 77 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetHardlink :: (ArchiveEntryPtr) -> (CString) -> IO ()
archiveEntrySetHardlink a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntrySetHardlink'_ a1' a2' >>
  return ()

{-# LINE 78 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetHardlinkUtf8 :: (ArchiveEntryPtr) -> (CString) -> IO ()
archiveEntrySetHardlinkUtf8 a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntrySetHardlinkUtf8'_ a1' a2' >>
  return ()

{-# LINE 79 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryCopyHardlink :: (ArchiveEntryPtr) -> (CString) -> IO ()
archiveEntryCopyHardlink a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntryCopyHardlink'_ a1' a2' >>
  return ()

{-# LINE 80 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryCopyHardlinkW :: (ArchiveEntryPtr) -> (CWString) -> IO ()
archiveEntryCopyHardlinkW a1 a2 =
  let {a1' = id a1} in 
  let {a2' = castPtr a2} in 
  archiveEntryCopyHardlinkW'_ a1' a2' >>
  return ()

{-# LINE 81 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetIno :: (ArchiveEntryPtr) -> (LaInt64) -> IO ()
archiveEntrySetIno a1 a2 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  archiveEntrySetIno'_ a1' a2' >>
  return ()

{-# LINE 82 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetIno64 :: (ArchiveEntryPtr) -> (LaInt64) -> IO ()
archiveEntrySetIno64 a1 a2 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  archiveEntrySetIno64'_ a1' a2' >>
  return ()

{-# LINE 83 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetLink :: (ArchiveEntryPtr) -> (CString) -> IO ()
archiveEntrySetLink a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntrySetLink'_ a1' a2' >>
  return ()

{-# LINE 84 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetLinkUtf8 :: (ArchiveEntryPtr) -> (CString) -> IO ()
archiveEntrySetLinkUtf8 a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntrySetLinkUtf8'_ a1' a2' >>
  return ()

{-# LINE 85 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryCopyLink :: (ArchiveEntryPtr) -> (CString) -> IO ()
archiveEntryCopyLink a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntryCopyLink'_ a1' a2' >>
  return ()

{-# LINE 86 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryCopyLinkW :: (ArchiveEntryPtr) -> (CWString) -> IO ()
archiveEntryCopyLinkW a1 a2 =
  let {a1' = id a1} in 
  let {a2' = castPtr a2} in 
  archiveEntryCopyLinkW'_ a1' a2' >>
  return ()

{-# LINE 87 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetMode :: (ArchiveEntryPtr) -> (CMode) -> IO ()
archiveEntrySetMode a1 a2 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  archiveEntrySetMode'_ a1' a2' >>
  return ()

{-# LINE 88 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetMtime :: (ArchiveEntryPtr) -> (CTime) -> (CLong) -> IO ()
archiveEntrySetMtime a1 a2 a3 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  let {a3' = fromIntegral a3} in 
  archiveEntrySetMtime'_ a1' a2' a3' >>
  return ()

{-# LINE 89 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryUnsetMtime :: (ArchiveEntryPtr) -> IO ()
archiveEntryUnsetMtime a1 =
  let {a1' = id a1} in 
  archiveEntryUnsetMtime'_ a1' >>
  return ()

{-# LINE 90 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetNlink :: (ArchiveEntryPtr) -> (CUInt) -> IO ()
archiveEntrySetNlink a1 a2 =
  let {a1' = id a1} in 
  let {a2' = fromIntegral a2} in 
  archiveEntrySetNlink'_ a1' a2' >>
  return ()

{-# LINE 91 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetPathname :: (ArchiveEntryPtr) -> (CString) -> IO ()
archiveEntrySetPathname a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntrySetPathname'_ a1' a2' >>
  return ()

{-# LINE 92 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetPathnameUtf8 :: (ArchiveEntryPtr) -> (CString) -> IO ()
archiveEntrySetPathnameUtf8 a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntrySetPathnameUtf8'_ a1' a2' >>
  return ()

{-# LINE 93 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryCopyPathname :: (ArchiveEntryPtr) -> (CString) -> IO ()
archiveEntryCopyPathname a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntryCopyPathname'_ a1' a2' >>
  return ()

{-# LINE 94 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryCopyPathnameW :: (ArchiveEntryPtr) -> (CWString) -> IO ()
archiveEntryCopyPathnameW a1 a2 =
  let {a1' = id a1} in 
  let {a2' = castPtr a2} in 
  archiveEntryCopyPathnameW'_ a1' a2' >>
  return ()

{-# LINE 95 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetPerm :: (ArchiveEntryPtr) -> (CMode) -> IO ()
archiveEntrySetPerm a1 a2 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  archiveEntrySetPerm'_ a1' a2' >>
  return ()

{-# LINE 96 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetRdev :: (ArchiveEntryPtr) -> (CDev) -> IO ()
archiveEntrySetRdev a1 a2 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  archiveEntrySetRdev'_ a1' a2' >>
  return ()

{-# LINE 97 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetRdevmajor :: (ArchiveEntryPtr) -> (CDev) -> IO ()
archiveEntrySetRdevmajor a1 a2 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  archiveEntrySetRdevmajor'_ a1' a2' >>
  return ()

{-# LINE 98 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetRdevminor :: (ArchiveEntryPtr) -> (CDev) -> IO ()
archiveEntrySetRdevminor a1 a2 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  archiveEntrySetRdevminor'_ a1' a2' >>
  return ()

{-# LINE 99 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetSize :: (ArchiveEntryPtr) -> (LaInt64) -> IO ()
archiveEntrySetSize a1 a2 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  archiveEntrySetSize'_ a1' a2' >>
  return ()

{-# LINE 100 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryUnsetSize :: (ArchiveEntryPtr) -> IO ()
archiveEntryUnsetSize a1 =
  let {a1' = id a1} in 
  archiveEntryUnsetSize'_ a1' >>
  return ()

{-# LINE 101 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryCopySourcepath :: (ArchiveEntryPtr) -> (CString) -> IO ()
archiveEntryCopySourcepath a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntryCopySourcepath'_ a1' a2' >>
  return ()

{-# LINE 102 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryCopySourcepathW :: (ArchiveEntryPtr) -> (CWString) -> IO ()
archiveEntryCopySourcepathW a1 a2 =
  let {a1' = id a1} in 
  let {a2' = castPtr a2} in 
  archiveEntryCopySourcepathW'_ a1' a2' >>
  return ()

{-# LINE 103 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetSymlink :: (ArchiveEntryPtr) -> (CString) -> IO ()
archiveEntrySetSymlink a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntrySetSymlink'_ a1' a2' >>
  return ()

{-# LINE 104 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetSymlinkType :: (ArchiveEntryPtr) -> (Symlink) -> IO ()
archiveEntrySetSymlinkType a1 a2 =
  let {a1' = id a1} in 
  let {a2' = (fromIntegral . fromEnum) a2} in 
  archiveEntrySetSymlinkType'_ a1' a2' >>
  return ()

{-# LINE 105 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetSymlinkUtf8 :: (ArchiveEntryPtr) -> (CString) -> IO ()
archiveEntrySetSymlinkUtf8 a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntrySetSymlinkUtf8'_ a1' a2' >>
  return ()

{-# LINE 106 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryCopySymlink :: (ArchiveEntryPtr) -> (CString) -> IO ()
archiveEntryCopySymlink a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntryCopySymlink'_ a1' a2' >>
  return ()

{-# LINE 107 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryCopySymlinkW :: (ArchiveEntryPtr) -> (CWString) -> IO ()
archiveEntryCopySymlinkW a1 a2 =
  let {a1' = id a1} in 
  let {a2' = castPtr a2} in 
  archiveEntryCopySymlinkW'_ a1' a2' >>
  return ()

{-# LINE 108 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetUid :: (ArchiveEntryPtr) -> (LaInt64) -> IO ()
archiveEntrySetUid a1 a2 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  archiveEntrySetUid'_ a1' a2' >>
  return ()

{-# LINE 109 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetUname :: (ArchiveEntryPtr) -> (CString) -> IO ()
archiveEntrySetUname a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntrySetUname'_ a1' a2' >>
  return ()

{-# LINE 110 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySetUnameUtf8 :: (ArchiveEntryPtr) -> (CString) -> IO ()
archiveEntrySetUnameUtf8 a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntrySetUnameUtf8'_ a1' a2' >>
  return ()

{-# LINE 111 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryCopyUname :: (ArchiveEntryPtr) -> (CString) -> IO ()
archiveEntryCopyUname a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntryCopyUname'_ a1' a2' >>
  return ()

{-# LINE 112 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryCopyUnameW :: (ArchiveEntryPtr) -> (CWString) -> IO ()
archiveEntryCopyUnameW a1 a2 =
  let {a1' = id a1} in 
  let {a2' = castPtr a2} in 
  archiveEntryCopyUnameW'_ a1' a2' >>
  return ()

{-# LINE 113 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryStat :: (ArchiveEntryPtr) -> IO ((StatPtr))
archiveEntryStat a1 =
  let {a1' = id a1} in 
  archiveEntryStat'_ a1' >>= \res ->
  let {res' = id res} in
  return (res')

{-# LINE 114 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryCopyStat :: (ArchiveEntryPtr) -> (StatPtr) -> IO ()
archiveEntryCopyStat a1 a2 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  archiveEntryCopyStat'_ a1' a2' >>
  return ()

{-# LINE 115 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryMacMetadata :: (ArchiveEntryPtr) -> (Ptr CSize) -> IO ((Ptr a))
archiveEntryMacMetadata a1 a2 =
  let {a1' = id a1} in 
  let {a2' = castPtr a2} in 
  archiveEntryMacMetadata'_ a1' a2' >>= \res ->
  let {res' = castPtr res} in
  return (res')

{-# LINE 116 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryCopyMacMetadata :: (ArchiveEntryPtr) -> (Ptr a) -> (CSize) -> IO ()
archiveEntryCopyMacMetadata a1 a2 a3 =
  let {a1' = id a1} in 
  let {a2' = castPtr a2} in 
  let {a3' = id a3} in 
  archiveEntryCopyMacMetadata'_ a1' a2' a3' >>
  return ()

{-# LINE 117 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}


archiveEntryAclClear :: (ArchiveEntryPtr) -> IO ()
archiveEntryAclClear a1 =
  let {a1' = id a1} in 
  archiveEntryAclClear'_ a1' >>
  return ()

{-# LINE 119 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryAclAddEntry :: (ArchiveEntryPtr) -> (EntryACL) -> (EntryACL) -> (EntryACL) -> (CInt) -> (CString) -> IO ((CInt))
archiveEntryAclAddEntry a1 a2 a3 a4 a5 a6 =
  let {a1' = id a1} in 
  let {a2' = coerce a2} in 
  let {a3' = coerce a3} in 
  let {a4' = coerce a4} in 
  let {a5' = fromIntegral a5} in 
  (flip ($)) a6 $ \a6' -> 
  archiveEntryAclAddEntry'_ a1' a2' a3' a4' a5' a6' >>= \res ->
  let {res' = fromIntegral res} in
  return (res')

{-# LINE 120 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryAclAddEntryW :: (ArchiveEntryPtr) -> (EntryACL) -> (EntryACL) -> (EntryACL) -> (CInt) -> (CWString) -> IO ((CInt))
archiveEntryAclAddEntryW a1 a2 a3 a4 a5 a6 =
  let {a1' = id a1} in 
  let {a2' = coerce a2} in 
  let {a3' = coerce a3} in 
  let {a4' = coerce a4} in 
  let {a5' = fromIntegral a5} in 
  let {a6' = castPtr a6} in 
  archiveEntryAclAddEntryW'_ a1' a2' a3' a4' a5' a6' >>= \res ->
  let {res' = fromIntegral res} in
  return (res')

{-# LINE 121 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryAclReset :: (ArchiveEntryPtr) -> (EntryACL) -> IO ((CInt))
archiveEntryAclReset a1 a2 =
  let {a1' = id a1} in 
  let {a2' = coerce a2} in 
  archiveEntryAclReset'_ a1' a2' >>= \res ->
  let {res' = fromIntegral res} in
  return (res')

{-# LINE 122 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryAclNext :: (ArchiveEntryPtr) -> (EntryACL) -> (Ptr EntryACL) -> (Ptr EntryACL) -> (Ptr EntryACL) -> (Ptr CInt) -> (Ptr CString) -> IO ((CInt))
archiveEntryAclNext a1 a2 a3 a4 a5 a6 a7 =
  let {a1' = id a1} in 
  let {a2' = coerce a2} in 
  let {a3' = castPtr a3} in 
  let {a4' = castPtr a4} in 
  let {a5' = castPtr a5} in 
  let {a6' = id a6} in 
  let {a7' = id a7} in 
  archiveEntryAclNext'_ a1' a2' a3' a4' a5' a6' a7' >>= \res ->
  let {res' = fromIntegral res} in
  return (res')

{-# LINE 123 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryAclNextW :: (ArchiveEntryPtr) -> (EntryACL) -> (Ptr EntryACL) -> (Ptr EntryACL) -> (Ptr EntryACL) -> (Ptr CInt) -> (Ptr CWString) -> IO ((CInt))
archiveEntryAclNextW a1 a2 a3 a4 a5 a6 a7 =
  let {a1' = id a1} in 
  let {a2' = coerce a2} in 
  let {a3' = castPtr a3} in 
  let {a4' = castPtr a4} in 
  let {a5' = castPtr a5} in 
  let {a6' = id a6} in 
  let {a7' = id a7} in 
  archiveEntryAclNextW'_ a1' a2' a3' a4' a5' a6' a7' >>= \res ->
  let {res' = fromIntegral res} in
  return (res')

{-# LINE 124 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryAclToTextW :: (ArchiveEntryPtr) -> (Ptr LaSSize) -> (EntryACL) -> IO ((CWString))
archiveEntryAclToTextW a1 a2 a3 =
  let {a1' = id a1} in 
  let {a2' = castPtr a2} in 
  let {a3' = coerce a3} in 
  archiveEntryAclToTextW'_ a1' a2' a3' >>= \res ->
  let {res' = castPtr res} in
  return (res')

{-# LINE 125 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryAclToText :: (ArchiveEntryPtr) -> (Ptr LaSSize) -> (EntryACL) -> IO ((CString))
archiveEntryAclToText a1 a2 a3 =
  let {a1' = id a1} in 
  let {a2' = castPtr a2} in 
  let {a3' = coerce a3} in 
  archiveEntryAclToText'_ a1' a2' a3' >>= \res ->
  return res >>= \res' ->
  return (res')

{-# LINE 126 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryAclFromText :: (ArchiveEntryPtr) -> (CString) -> (EntryACL) -> IO ((CInt))
archiveEntryAclFromText a1 a2 a3 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  let {a3' = coerce a3} in 
  archiveEntryAclFromText'_ a1' a2' a3' >>= \res ->
  let {res' = fromIntegral res} in
  return (res')

{-# LINE 127 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryAclFromTextW :: (ArchiveEntryPtr) -> (CWString) -> (EntryACL) -> IO ((CInt))
archiveEntryAclFromTextW a1 a2 a3 =
  let {a1' = id a1} in 
  let {a2' = castPtr a2} in 
  let {a3' = coerce a3} in 
  archiveEntryAclFromTextW'_ a1' a2' a3' >>= \res ->
  let {res' = fromIntegral res} in
  return (res')

{-# LINE 128 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryAclTypes :: (ArchiveEntryPtr) -> IO ((EntryACL))
archiveEntryAclTypes a1 =
  let {a1' = id a1} in 
  archiveEntryAclTypes'_ a1' >>= \res ->
  let {res' = coerce res} in
  return (res')

{-# LINE 129 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryAclCount :: (ArchiveEntryPtr) -> (EntryACL) -> IO ((CInt))
archiveEntryAclCount a1 a2 =
  let {a1' = id a1} in 
  let {a2' = coerce a2} in 
  archiveEntryAclCount'_ a1' a2' >>= \res ->
  let {res' = fromIntegral res} in
  return (res')

{-# LINE 130 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}


archiveEntryXattrClear :: (ArchiveEntryPtr) -> IO ()
archiveEntryXattrClear a1 =
  let {a1' = id a1} in 
  archiveEntryXattrClear'_ a1' >>
  return ()

{-# LINE 132 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryXattrAddEntry :: (ArchiveEntryPtr) -> (CString) -> (Ptr a) -> (CSize) -> IO ()
archiveEntryXattrAddEntry a1 a2 a3 a4 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  let {a3' = castPtr a3} in 
  let {a4' = id a4} in 
  archiveEntryXattrAddEntry'_ a1' a2' a3' a4' >>
  return ()

{-# LINE 133 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryXattrCount :: (ArchiveEntryPtr) -> IO ((CInt))
archiveEntryXattrCount a1 =
  let {a1' = id a1} in 
  archiveEntryXattrCount'_ a1' >>= \res ->
  let {res' = fromIntegral res} in
  return (res')

{-# LINE 134 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryXattrReset :: (ArchiveEntryPtr) -> IO ((CInt))
archiveEntryXattrReset a1 =
  let {a1' = id a1} in 
  archiveEntryXattrReset'_ a1' >>= \res ->
  let {res' = fromIntegral res} in
  return (res')

{-# LINE 135 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryXattrNext :: (ArchiveEntryPtr) -> (Ptr CString) -> (Ptr (Ptr a)) -> (Ptr CSize) -> IO ((CInt))
archiveEntryXattrNext a1 a2 a3 a4 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  let {a3' = castPtr a3} in 
  let {a4' = id a4} in 
  archiveEntryXattrNext'_ a1' a2' a3' a4' >>= \res ->
  let {res' = fromIntegral res} in
  return (res')

{-# LINE 136 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySparseClear :: (ArchiveEntryPtr) -> IO ()
archiveEntrySparseClear a1 =
  let {a1' = id a1} in 
  archiveEntrySparseClear'_ a1' >>
  return ()

{-# LINE 137 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySparseAddEntry :: (ArchiveEntryPtr) -> (LaInt64) -> (LaInt64) -> IO ()
archiveEntrySparseAddEntry a1 a2 a3 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  let {a3' = id a3} in 
  archiveEntrySparseAddEntry'_ a1' a2' a3' >>
  return ()

{-# LINE 138 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySparseCount :: (ArchiveEntryPtr) -> IO ((CInt))
archiveEntrySparseCount a1 =
  let {a1' = id a1} in 
  archiveEntrySparseCount'_ a1' >>= \res ->
  let {res' = fromIntegral res} in
  return (res')

{-# LINE 139 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySparseReset :: (ArchiveEntryPtr) -> IO ((CInt))
archiveEntrySparseReset a1 =
  let {a1' = id a1} in 
  archiveEntrySparseReset'_ a1' >>= \res ->
  let {res' = fromIntegral res} in
  return (res')

{-# LINE 140 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySparseNext :: (ArchiveEntryPtr) -> (Ptr LaInt64) -> (Ptr LaInt64) -> IO ((CInt))
archiveEntrySparseNext a1 a2 a3 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  let {a3' = id a3} in 
  archiveEntrySparseNext'_ a1' a2' a3' >>= \res ->
  let {res' = fromIntegral res} in
  return (res')

{-# LINE 141 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryLinkresolverNew :: IO ((LinkResolverPtr))
archiveEntryLinkresolverNew =
  archiveEntryLinkresolverNew'_ >>= \res ->
  let {res' = id res} in
  return (res')

{-# LINE 142 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryLinkresolverSetStrategy :: (LinkResolverPtr) -> (ArchiveFormat) -> IO ()
archiveEntryLinkresolverSetStrategy a1 a2 =
  let {a1' = id a1} in 
  let {a2' = (fromIntegral . fromEnum) a2} in 
  archiveEntryLinkresolverSetStrategy'_ a1' a2' >>
  return ()

{-# LINE 143 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryLinkresolverFree :: (LinkResolverPtr) -> IO ()
archiveEntryLinkresolverFree a1 =
  let {a1' = id a1} in 
  archiveEntryLinkresolverFree'_ a1' >>
  return ()

{-# LINE 144 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryLinkify :: (LinkResolverPtr) -> (Ptr ArchiveEntryPtr) -> (Ptr ArchiveEntryPtr) -> IO ()
archiveEntryLinkify a1 a2 a3 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  let {a3' = id a3} in 
  archiveEntryLinkify'_ a1' a2' a3' >>
  return ()

{-# LINE 145 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryPartialLinks :: (LinkResolverPtr) -> (Ptr CUInt) -> IO ((Ptr ArchiveEntry))
archiveEntryPartialLinks a1 a2 =
  let {a1' = id a1} in 
  let {a2' = id a2} in 
  archiveEntryPartialLinks'_ a1' a2' >>= \res ->
  let {res' = id res} in
  return (res')

{-# LINE 146 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}


archiveEntryAtimeIsSet :: (ArchiveEntryPtr) -> IO ((Bool))
archiveEntryAtimeIsSet a1 =
  let {a1' = id a1} in 
  archiveEntryAtimeIsSet'_ a1' >>= \res ->
  let {res' = C2HSImp.toBool res} in
  return (res')

{-# LINE 148 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryBirthtimeIsSet :: (ArchiveEntryPtr) -> IO ((Bool))
archiveEntryBirthtimeIsSet a1 =
  let {a1' = id a1} in 
  archiveEntryBirthtimeIsSet'_ a1' >>= \res ->
  let {res' = C2HSImp.toBool res} in
  return (res')

{-# LINE 149 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryCtimeIsSet :: (ArchiveEntryPtr) -> IO ((Bool))
archiveEntryCtimeIsSet a1 =
  let {a1' = id a1} in 
  archiveEntryCtimeIsSet'_ a1' >>= \res ->
  let {res' = C2HSImp.toBool res} in
  return (res')

{-# LINE 150 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryDevIsSet :: (ArchiveEntryPtr) -> IO ((Bool))
archiveEntryDevIsSet a1 =
  let {a1' = id a1} in 
  archiveEntryDevIsSet'_ a1' >>= \res ->
  let {res' = C2HSImp.toBool res} in
  return (res')

{-# LINE 151 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryInoIsSet :: (ArchiveEntryPtr) -> IO ((Bool))
archiveEntryInoIsSet a1 =
  let {a1' = id a1} in 
  archiveEntryInoIsSet'_ a1' >>= \res ->
  let {res' = C2HSImp.toBool res} in
  return (res')

{-# LINE 152 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryMtimeIsSet :: (ArchiveEntryPtr) -> IO ((Bool))
archiveEntryMtimeIsSet a1 =
  let {a1' = id a1} in 
  archiveEntryMtimeIsSet'_ a1' >>= \res ->
  let {res' = C2HSImp.toBool res} in
  return (res')

{-# LINE 153 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntrySizeIsSet :: (ArchiveEntryPtr) -> IO ((Bool))
archiveEntrySizeIsSet a1 =
  let {a1' = id a1} in 
  archiveEntrySizeIsSet'_ a1' >>= \res ->
  let {res' = C2HSImp.toBool res} in
  return (res')

{-# LINE 154 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryIsDataEncrypted :: (ArchiveEntryPtr) -> IO ((Bool))
archiveEntryIsDataEncrypted a1 =
  let {a1' = id a1} in 
  archiveEntryIsDataEncrypted'_ a1' >>= \res ->
  let {res' = C2HSImp.toBool res} in
  return (res')

{-# LINE 155 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryIsMetadataEncrypted :: (ArchiveEntryPtr) -> IO ((Bool))
archiveEntryIsMetadataEncrypted a1 =
  let {a1' = id a1} in 
  archiveEntryIsMetadataEncrypted'_ a1' >>= \res ->
  let {res' = C2HSImp.toBool res} in
  return (res')

{-# LINE 156 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryIsEncrypted :: (ArchiveEntryPtr) -> IO ((Bool))
archiveEntryIsEncrypted a1 =
  let {a1' = id a1} in 
  archiveEntryIsEncrypted'_ a1' >>= \res ->
  let {res' = C2HSImp.toBool res} in
  return (res')

{-# LINE 157 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryUpdateGnameUtf8 :: (ArchiveEntryPtr) -> (CString) -> IO ((Bool))
archiveEntryUpdateGnameUtf8 a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntryUpdateGnameUtf8'_ a1' a2' >>= \res ->
  let {res' = C2HSImp.toBool res} in
  return (res')

{-# LINE 158 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryUpdateHardlinkUtf8 :: (ArchiveEntryPtr) -> (CString) -> IO ((Bool))
archiveEntryUpdateHardlinkUtf8 a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntryUpdateHardlinkUtf8'_ a1' a2' >>= \res ->
  let {res' = C2HSImp.toBool res} in
  return (res')

{-# LINE 159 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryUpdateLinkUtf8 :: (ArchiveEntryPtr) -> (CString) -> IO ((Bool))
archiveEntryUpdateLinkUtf8 a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntryUpdateLinkUtf8'_ a1' a2' >>= \res ->
  let {res' = C2HSImp.toBool res} in
  return (res')

{-# LINE 160 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryUpdatePathnameUtf8 :: (ArchiveEntryPtr) -> (CString) -> IO ((Bool))
archiveEntryUpdatePathnameUtf8 a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntryUpdatePathnameUtf8'_ a1' a2' >>= \res ->
  let {res' = C2HSImp.toBool res} in
  return (res')

{-# LINE 161 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryUpdateSymlinkUtf8 :: (ArchiveEntryPtr) -> (CString) -> IO ((Bool))
archiveEntryUpdateSymlinkUtf8 a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntryUpdateSymlinkUtf8'_ a1' a2' >>= \res ->
  let {res' = C2HSImp.toBool res} in
  return (res')

{-# LINE 162 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}

archiveEntryUpdateUnameUtf8 :: (ArchiveEntryPtr) -> (CString) -> IO ((Bool))
archiveEntryUpdateUnameUtf8 a1 a2 =
  let {a1' = id a1} in 
  (flip ($)) a2 $ \a2' -> 
  archiveEntryUpdateUnameUtf8'_ a1' a2' >>= \res ->
  let {res' = C2HSImp.toBool res} in
  return (res')

{-# LINE 163 "src/Codec/Archive/Foreign/ArchiveEntry.chs" #-}


foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_new"
  archiveEntryNew'_ :: (IO (ArchiveEntryPtr))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_free"
  archiveEntryFree'_ :: ((ArchiveEntryPtr) -> (IO ()))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_atime"
  archiveEntryAtime'_ :: ((ArchiveEntryPtr) -> (IO CTime))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_atime_nsec"
  archiveEntryAtimeNsec'_ :: ((ArchiveEntryPtr) -> (IO C2HSImp.CLong))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_filetype"
  archiveEntryFiletype'_ :: ((ArchiveEntryPtr) -> (IO CMode))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_gid"
  archiveEntryGid'_ :: ((ArchiveEntryPtr) -> (IO LaInt64))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_gname"
  archiveEntryGname'_ :: ((ArchiveEntryPtr) -> (IO (C2HSImp.Ptr C2HSImp.CChar)))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_gname_utf8"
  archiveEntryGnameUtf8'_ :: ((ArchiveEntryPtr) -> (IO (C2HSImp.Ptr C2HSImp.CChar)))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_gname_w"
  archiveEntryGnameW'_ :: ((ArchiveEntryPtr) -> (IO (C2HSImp.Ptr CWchar)))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_mode"
  archiveEntryMode'_ :: ((ArchiveEntryPtr) -> (IO CMode))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_mtime"
  archiveEntryMtime'_ :: ((ArchiveEntryPtr) -> (IO CTime))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_mtime_nsec"
  archiveEntryMtimeNsec'_ :: ((ArchiveEntryPtr) -> (IO C2HSImp.CLong))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_nlink"
  archiveEntryNlink'_ :: ((ArchiveEntryPtr) -> (IO C2HSImp.CUInt))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_pathname"
  archiveEntryPathname'_ :: ((ArchiveEntryPtr) -> (IO (C2HSImp.Ptr C2HSImp.CChar)))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_perm"
  archiveEntryPerm'_ :: ((ArchiveEntryPtr) -> (IO CMode))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_sourcepath"
  archiveEntrySourcepath'_ :: ((ArchiveEntryPtr) -> (IO (C2HSImp.Ptr C2HSImp.CChar)))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_sourcepath_w"
  archiveEntrySourcepathW'_ :: ((ArchiveEntryPtr) -> (IO (C2HSImp.Ptr CWchar)))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_size"
  archiveEntrySize'_ :: ((ArchiveEntryPtr) -> (IO LaInt64))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_strmode"
  archiveEntryStrmode'_ :: ((ArchiveEntryPtr) -> (IO (C2HSImp.Ptr C2HSImp.CChar)))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_symlink"
  archiveEntrySymlink'_ :: ((ArchiveEntryPtr) -> (IO (C2HSImp.Ptr C2HSImp.CChar)))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_symlink_w"
  archiveEntrySymlinkW'_ :: ((ArchiveEntryPtr) -> (IO (C2HSImp.Ptr CWchar)))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_symlink_utf8"
  archiveEntrySymlinkUtf8'_ :: ((ArchiveEntryPtr) -> (IO (C2HSImp.Ptr C2HSImp.CChar)))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_uid"
  archiveEntryUid'_ :: ((ArchiveEntryPtr) -> (IO LaInt64))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_uname"
  archiveEntryUname'_ :: ((ArchiveEntryPtr) -> (IO (C2HSImp.Ptr C2HSImp.CChar)))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_uname_utf8"
  archiveEntryUnameUtf8'_ :: ((ArchiveEntryPtr) -> (IO (C2HSImp.Ptr C2HSImp.CChar)))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_uname_w"
  archiveEntryUnameW'_ :: ((ArchiveEntryPtr) -> (IO (C2HSImp.Ptr CWchar)))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_atime"
  archiveEntrySetAtime'_ :: ((ArchiveEntryPtr) -> (CTime -> (C2HSImp.CLong -> (IO ()))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_unset_atime"
  archiveEntryUnsetAtime'_ :: ((ArchiveEntryPtr) -> (IO ()))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_birthtime"
  archiveEntrySetBirthtime'_ :: ((ArchiveEntryPtr) -> (CTime -> (C2HSImp.CLong -> (IO ()))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_unset_birthtime"
  archiveEntryUnsetBirthtime'_ :: ((ArchiveEntryPtr) -> (IO ()))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_ctime"
  archiveEntrySetCtime'_ :: ((ArchiveEntryPtr) -> (CTime -> (C2HSImp.CLong -> (IO ()))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_unset_ctime"
  archiveEntryUnsetCtime'_ :: ((ArchiveEntryPtr) -> (IO ()))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_dev"
  archiveEntrySetDev'_ :: ((ArchiveEntryPtr) -> (CDev -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_devmajor"
  archiveEntrySetDevmajor'_ :: ((ArchiveEntryPtr) -> (CDev -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_devminor"
  archiveEntrySetDevminor'_ :: ((ArchiveEntryPtr) -> (CDev -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_fflags"
  archiveEntrySetFflags'_ :: ((ArchiveEntryPtr) -> (C2HSImp.CULong -> (C2HSImp.CULong -> (IO ()))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_copy_fflags_text"
  archiveEntryCopyFflagsText'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO (C2HSImp.Ptr C2HSImp.CChar))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_copy_fflags_text_w"
  archiveEntryCopyFflagsTextW'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr CWchar) -> (IO (C2HSImp.Ptr CWchar))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_filetype"
  archiveEntrySetFiletype'_ :: ((ArchiveEntryPtr) -> (C2HSImp.CUInt -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_gid"
  archiveEntrySetGid'_ :: ((ArchiveEntryPtr) -> (LaInt64 -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_gname"
  archiveEntrySetGname'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_gname_utf8"
  archiveEntrySetGnameUtf8'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_copy_gname"
  archiveEntryCopyGname'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_copy_gname_w"
  archiveEntryCopyGnameW'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr CWchar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_hardlink"
  archiveEntrySetHardlink'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_hardlink_utf8"
  archiveEntrySetHardlinkUtf8'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_copy_hardlink"
  archiveEntryCopyHardlink'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_copy_hardlink_w"
  archiveEntryCopyHardlinkW'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr CWchar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_ino"
  archiveEntrySetIno'_ :: ((ArchiveEntryPtr) -> (LaInt64 -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_ino64"
  archiveEntrySetIno64'_ :: ((ArchiveEntryPtr) -> (LaInt64 -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_link"
  archiveEntrySetLink'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_link_utf8"
  archiveEntrySetLinkUtf8'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_copy_link"
  archiveEntryCopyLink'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_copy_link_w"
  archiveEntryCopyLinkW'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr CWchar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_mode"
  archiveEntrySetMode'_ :: ((ArchiveEntryPtr) -> (CMode -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_mtime"
  archiveEntrySetMtime'_ :: ((ArchiveEntryPtr) -> (CTime -> (C2HSImp.CLong -> (IO ()))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_unset_mtime"
  archiveEntryUnsetMtime'_ :: ((ArchiveEntryPtr) -> (IO ()))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_nlink"
  archiveEntrySetNlink'_ :: ((ArchiveEntryPtr) -> (C2HSImp.CUInt -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_pathname"
  archiveEntrySetPathname'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_pathname_utf8"
  archiveEntrySetPathnameUtf8'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_copy_pathname"
  archiveEntryCopyPathname'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_copy_pathname_w"
  archiveEntryCopyPathnameW'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr CWchar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_perm"
  archiveEntrySetPerm'_ :: ((ArchiveEntryPtr) -> (CMode -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_rdev"
  archiveEntrySetRdev'_ :: ((ArchiveEntryPtr) -> (CDev -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_rdevmajor"
  archiveEntrySetRdevmajor'_ :: ((ArchiveEntryPtr) -> (CDev -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_rdevminor"
  archiveEntrySetRdevminor'_ :: ((ArchiveEntryPtr) -> (CDev -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_size"
  archiveEntrySetSize'_ :: ((ArchiveEntryPtr) -> (LaInt64 -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_unset_size"
  archiveEntryUnsetSize'_ :: ((ArchiveEntryPtr) -> (IO ()))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_copy_sourcepath"
  archiveEntryCopySourcepath'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_copy_sourcepath_w"
  archiveEntryCopySourcepathW'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr CWchar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_symlink"
  archiveEntrySetSymlink'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_symlink_type"
  archiveEntrySetSymlinkType'_ :: ((ArchiveEntryPtr) -> (C2HSImp.CInt -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_symlink_utf8"
  archiveEntrySetSymlinkUtf8'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_copy_symlink"
  archiveEntryCopySymlink'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_copy_symlink_w"
  archiveEntryCopySymlinkW'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr CWchar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_uid"
  archiveEntrySetUid'_ :: ((ArchiveEntryPtr) -> (LaInt64 -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_uname"
  archiveEntrySetUname'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_set_uname_utf8"
  archiveEntrySetUnameUtf8'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_copy_uname"
  archiveEntryCopyUname'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_copy_uname_w"
  archiveEntryCopyUnameW'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr CWchar) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_stat"
  archiveEntryStat'_ :: ((ArchiveEntryPtr) -> (IO (StatPtr)))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_copy_stat"
  archiveEntryCopyStat'_ :: ((ArchiveEntryPtr) -> ((StatPtr) -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_mac_metadata"
  archiveEntryMacMetadata'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr CSize) -> (IO (C2HSImp.Ptr ()))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_copy_mac_metadata"
  archiveEntryCopyMacMetadata'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr ()) -> (CSize -> (IO ()))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_acl_clear"
  archiveEntryAclClear'_ :: ((ArchiveEntryPtr) -> (IO ()))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_acl_add_entry"
  archiveEntryAclAddEntry'_ :: ((ArchiveEntryPtr) -> (C2HSImp.CInt -> (C2HSImp.CInt -> (C2HSImp.CInt -> (C2HSImp.CInt -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO C2HSImp.CInt)))))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_acl_add_entry_w"
  archiveEntryAclAddEntryW'_ :: ((ArchiveEntryPtr) -> (C2HSImp.CInt -> (C2HSImp.CInt -> (C2HSImp.CInt -> (C2HSImp.CInt -> ((C2HSImp.Ptr CWchar) -> (IO C2HSImp.CInt)))))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_acl_reset"
  archiveEntryAclReset'_ :: ((ArchiveEntryPtr) -> (C2HSImp.CInt -> (IO C2HSImp.CInt)))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_acl_next"
  archiveEntryAclNext'_ :: ((ArchiveEntryPtr) -> (C2HSImp.CInt -> ((C2HSImp.Ptr C2HSImp.CInt) -> ((C2HSImp.Ptr C2HSImp.CInt) -> ((C2HSImp.Ptr C2HSImp.CInt) -> ((C2HSImp.Ptr C2HSImp.CInt) -> ((C2HSImp.Ptr (C2HSImp.Ptr C2HSImp.CChar)) -> (IO C2HSImp.CInt))))))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_acl_next_w"
  archiveEntryAclNextW'_ :: ((ArchiveEntryPtr) -> (C2HSImp.CInt -> ((C2HSImp.Ptr C2HSImp.CInt) -> ((C2HSImp.Ptr C2HSImp.CInt) -> ((C2HSImp.Ptr C2HSImp.CInt) -> ((C2HSImp.Ptr C2HSImp.CInt) -> ((C2HSImp.Ptr (C2HSImp.Ptr CWchar)) -> (IO C2HSImp.CInt))))))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_acl_to_text_w"
  archiveEntryAclToTextW'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CLong) -> (C2HSImp.CInt -> (IO (C2HSImp.Ptr CWchar)))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_acl_to_text"
  archiveEntryAclToText'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CLong) -> (C2HSImp.CInt -> (IO (C2HSImp.Ptr C2HSImp.CChar)))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_acl_from_text"
  archiveEntryAclFromText'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (C2HSImp.CInt -> (IO C2HSImp.CInt))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_acl_from_text_w"
  archiveEntryAclFromTextW'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr CWchar) -> (C2HSImp.CInt -> (IO C2HSImp.CInt))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_acl_types"
  archiveEntryAclTypes'_ :: ((ArchiveEntryPtr) -> (IO C2HSImp.CInt))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_acl_count"
  archiveEntryAclCount'_ :: ((ArchiveEntryPtr) -> (C2HSImp.CInt -> (IO C2HSImp.CInt)))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_xattr_clear"
  archiveEntryXattrClear'_ :: ((ArchiveEntryPtr) -> (IO ()))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_xattr_add_entry"
  archiveEntryXattrAddEntry'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> ((C2HSImp.Ptr ()) -> (CSize -> (IO ())))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_xattr_count"
  archiveEntryXattrCount'_ :: ((ArchiveEntryPtr) -> (IO C2HSImp.CInt))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_xattr_reset"
  archiveEntryXattrReset'_ :: ((ArchiveEntryPtr) -> (IO C2HSImp.CInt))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_xattr_next"
  archiveEntryXattrNext'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr (C2HSImp.Ptr C2HSImp.CChar)) -> ((C2HSImp.Ptr (C2HSImp.Ptr ())) -> ((C2HSImp.Ptr CSize) -> (IO C2HSImp.CInt)))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_sparse_clear"
  archiveEntrySparseClear'_ :: ((ArchiveEntryPtr) -> (IO ()))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_sparse_add_entry"
  archiveEntrySparseAddEntry'_ :: ((ArchiveEntryPtr) -> (LaInt64 -> (LaInt64 -> (IO ()))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_sparse_count"
  archiveEntrySparseCount'_ :: ((ArchiveEntryPtr) -> (IO C2HSImp.CInt))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_sparse_reset"
  archiveEntrySparseReset'_ :: ((ArchiveEntryPtr) -> (IO C2HSImp.CInt))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_sparse_next"
  archiveEntrySparseNext'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr LaInt64) -> ((C2HSImp.Ptr LaInt64) -> (IO C2HSImp.CInt))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_linkresolver_new"
  archiveEntryLinkresolverNew'_ :: (IO (LinkResolverPtr))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_linkresolver_set_strategy"
  archiveEntryLinkresolverSetStrategy'_ :: ((LinkResolverPtr) -> (C2HSImp.CInt -> (IO ())))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_linkresolver_free"
  archiveEntryLinkresolverFree'_ :: ((LinkResolverPtr) -> (IO ()))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_linkify"
  archiveEntryLinkify'_ :: ((LinkResolverPtr) -> ((C2HSImp.Ptr (ArchiveEntryPtr)) -> ((C2HSImp.Ptr (ArchiveEntryPtr)) -> (IO ()))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_partial_links"
  archiveEntryPartialLinks'_ :: ((LinkResolverPtr) -> ((C2HSImp.Ptr C2HSImp.CUInt) -> (IO (ArchiveEntryPtr))))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_atime_is_set"
  archiveEntryAtimeIsSet'_ :: ((ArchiveEntryPtr) -> (IO C2HSImp.CInt))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_birthtime_is_set"
  archiveEntryBirthtimeIsSet'_ :: ((ArchiveEntryPtr) -> (IO C2HSImp.CInt))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_ctime_is_set"
  archiveEntryCtimeIsSet'_ :: ((ArchiveEntryPtr) -> (IO C2HSImp.CInt))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_dev_is_set"
  archiveEntryDevIsSet'_ :: ((ArchiveEntryPtr) -> (IO C2HSImp.CInt))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_ino_is_set"
  archiveEntryInoIsSet'_ :: ((ArchiveEntryPtr) -> (IO C2HSImp.CInt))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_mtime_is_set"
  archiveEntryMtimeIsSet'_ :: ((ArchiveEntryPtr) -> (IO C2HSImp.CInt))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_size_is_set"
  archiveEntrySizeIsSet'_ :: ((ArchiveEntryPtr) -> (IO C2HSImp.CInt))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_is_data_encrypted"
  archiveEntryIsDataEncrypted'_ :: ((ArchiveEntryPtr) -> (IO C2HSImp.CInt))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_is_metadata_encrypted"
  archiveEntryIsMetadataEncrypted'_ :: ((ArchiveEntryPtr) -> (IO C2HSImp.CInt))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_is_encrypted"
  archiveEntryIsEncrypted'_ :: ((ArchiveEntryPtr) -> (IO C2HSImp.CInt))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_update_gname_utf8"
  archiveEntryUpdateGnameUtf8'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO C2HSImp.CInt)))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_update_hardlink_utf8"
  archiveEntryUpdateHardlinkUtf8'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO C2HSImp.CInt)))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_update_link_utf8"
  archiveEntryUpdateLinkUtf8'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO C2HSImp.CInt)))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_update_pathname_utf8"
  archiveEntryUpdatePathnameUtf8'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO C2HSImp.CInt)))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_update_symlink_utf8"
  archiveEntryUpdateSymlinkUtf8'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO C2HSImp.CInt)))

foreign import ccall safe "src/Codec/Archive/Foreign/ArchiveEntry.chs.h archive_entry_update_uname_utf8"
  archiveEntryUpdateUnameUtf8'_ :: ((ArchiveEntryPtr) -> ((C2HSImp.Ptr C2HSImp.CChar) -> (IO C2HSImp.CInt)))
